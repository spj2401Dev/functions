@page "/login"
@page "/login/{*ReturnUrl}"
@using Functions.Client.Services
@using Microsoft.AspNetCore.Components.Forms
@inject AuthService jwtAuthService

<h3>Login</h3>

<EditForm Model="@loginRequest" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="username" class="form-label">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginRequest.Username" />
        <ValidationMessage For="@(() => loginRequest.Username)" />
    </div>
    
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginRequest.Password" />
        <ValidationMessage For="@(() => loginRequest.Password)" />
    </div>
    
    <button type="submit" class="fn-button" disabled="@isLoading">
        @if (isLoading)
        {
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            <span>Loading...</span>
        }
        else
        {
            <span>Login</span>
        }
    </button>
</EditForm>

<div>
    <h1>Your Login Infos:</h1>
    <p>IsAuthenticated: @isAuthenticated</p>
    <p>Username: @username</p>
    <p>UserId: @userId</p>
</div>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-danger mt-3">
        @message
    </div>
}

<div class="mt-3">
    <p>Don't have an account? <a @onclick="NavigateToRegisterPage">Register here</a></p>
</div>

<div class="mt-3">
    <p>To logout, click <a @onclick="Logout">here</a></p>
</div>