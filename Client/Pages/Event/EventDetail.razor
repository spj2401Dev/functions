@page "/events/{eventid:guid}"
@using Functions.Shared.DTOs
@using Functions.Shared.Enum
@using Functions.Shared.Extensions
@using Functions.Shared.Interfaces
@using Functions.Client.Components

<div class="event-detail" >
    @if (eventItem?.Id != null)
    {
        <PageTitle>@eventItem.Name</PageTitle>

        <div class="event-detail-content">
            @if (eventItem.FileId != null)
            {
                <FnImage FileId="@eventItem.FileId.Value" CssClass="card-img-top"/>
            }

            <h1>@eventItem.Name</h1>
            <p>Location: @eventItem.Location</p>
            <p>Description: @eventItem.Description</p>
            <p>Start: @eventItem.StartDateTime</p>
            <p>End: @eventItem.EndDateTime</p>
        </div>

        <div>
            <button @onclick="() => PostParticipation(ParticipationStatus.Accepted)" style="font-weight: @(participations.Status == ParticipationStatus.Accepted ? "bold" : "normal")">Ich komme</button>
            <button @onclick="() => PostParticipation(ParticipationStatus.Unsure)" style="font-weight: @(participations.Status == ParticipationStatus.Unsure ? "bold" : "normal")">Ich komme vielleicht</button>
            <button @onclick="() => PostParticipation(ParticipationStatus.Declined)" style="font-weight: @(participations.Status == ParticipationStatus.Declined ? "bold" : "normal")">Ich kann nicht</button>
        </div>

        <div>
            <h1>Teilnehmer</h1>
            <ul>
                @foreach (var participant in participations.Users.OrderBy(x => x.Status))
                {
                    <li>
                        <p>@participant.FullName</p>
                        <p style="font-size: 11px;">@participant.Status.GetDescription()</p>
                    </li>
                }
            </ul>
        </div>

        @if (eventItem.HostId == userId)
        {
            <div>
                <h1>Ankündigung schreiben</h1>
                <textarea @bind="@announcemenRequest.Message" rows="4" cols="50"></textarea>
                <button @onclick="CreateAnnouncement">Erstellen</button>
            </div>
        }

        @if (messages.Any()) {
            <h1>Ankündigungen</h1>
            <ul>
                @foreach (var message in messages.Where(x => x.Type == MessageTypes.Announcement).ToList())
                {
                    <li>
                        <p>@message.Text</p>
                        <p style="font-size: 11px;">@message.Creator.FullName - @message.MessageDate</p>
                    </li>
                }
            </ul>
        }

        <h1>Kommentare</h1>
        @if (messages.Any())
        {
            <ul>
                @foreach (var message in messages.Where(x => x.Type == MessageTypes.Comment && x.ParentId == null).ToList())
                {
                    <li>
                        <p>@message.Text</p>
                        <p style="font-size: 11px;">@message.Creator.FullName - @message.MessageDate</p>
                        
                        <button @onclick="() => ToggleReplyBox(message.Id)">Reply</button>
                        
                        @if (replyBoxOpen.ContainsKey(message.Id) && replyBoxOpen[message.Id])
                        {
                            <div class="reply-box" style="margin-left: 20px; margin-top: 10px;">
                                <textarea @bind="@replyTexts[message.Id]" rows="3" cols="40" placeholder="Write a reply..."></textarea>
                                <div style="margin-top: 5px;">
                                    <button @onclick="() => PostReply(message.Id)">Submit</button>
                                    <button @onclick="() => ToggleReplyBox(message.Id)">Cancel</button>
                                </div>
                            </div>
                        }
                        
                        @* Display replies to this comment *@
                        @if (messages.Any(x => x.ParentId == message.Id))
                        {
                            <ul style="margin-left: 40px;">
                                @foreach (var reply in messages.Where(x => x.ParentId == message.Id).ToList())
                                {
                                    <li style="margin-top: 10px; border-left: 2px solid #ccc; padding-left: 10px;">
                                        <p>@reply.Text</p>
                                        <p style="font-size: 11px;">@reply.Creator.FullName - @reply.MessageDate</p>
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            </ul>
        }

        <textarea @bind="comment" rows="4" cols="50"></textarea>
        <button @onclick="() => PostComment(null)">Kommentar hinzufügen</button>

        <br />

        <button @onclick="() => ReturnToMainPage()">Back to Main Page</button>
    }
    else
    {
        <PageTitle>Event</PageTitle>

        <div class="event-detail-content">
            <h1>No Event</h1>
            <button @onclick="() => ReturnToMainPage()">Back to Main Page</button>
        </div>
    }
</div>
